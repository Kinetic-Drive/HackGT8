{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "396119fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    Index                          Name       Color     Price  Size  \\\n",
      "0       0  Aristocles Innerspring Queen        Pink  $730.99     65   \n",
      "1       1                   Bournemouth   Dark Grey  $716.99     70   \n",
      "2       2                      Cheshire   Dark Grey  $370.99     67   \n",
      "3       3                    Derryclone      Yellow  $465.99     55   \n",
      "4       4                         Espey       White  $720.99     55   \n",
      "5       5                         Hagen       Black  $523.99     75   \n",
      "6       6                       Inshore        Lime  $817.99     66   \n",
      "7       7                         Kasey       White  $899.99     70   \n",
      "8       8                      Kittrell       Brown  $613.99     68   \n",
      "9       9                         Sonya         Red  $376.99     57   \n",
      "10     10                   Walton Lane        Grey  $679.99     60   \n",
      "11     11      Clairsville Leather Sofa       Brown  $411.99     60   \n",
      "12     12               Gardner Leather  Dark Brown  $722.99     60   \n",
      "13     13             Hawthorne Leather  White/Grey  $793.99     64   \n",
      "14     14         Molly Premium Italian       Black  $951.99     70   \n",
      "15     15                    Pratt Sofa         Red  $427.99     65   \n",
      "16     16                         Alder   Dark Wood  $497.99     45   \n",
      "17     17                   Beltzhoover       Peach  $148.99     55   \n",
      "18     18                        Cudahy  Light Wood  $343.99     55   \n",
      "19     19                      Drummond       Black  $551.99     40   \n",
      "20     20                          Erik      Silver  $564.99     45   \n",
      "21     21                     McPherson       White  $564.99     65   \n",
      "22     22                          Oslo       White  $287.99     55   \n",
      "23     23        Scheider Stacked Shelf      Silver  $539.99     65   \n",
      "24     24                     Scheinman       White  $397.99     57   \n",
      "25     25                     Theodulus       White  $148.99     47   \n",
      "26     26                   Walden Wood  Light Wood  $521.99     50   \n",
      "27     27                       Alfreda       White  $408.99     50   \n",
      "28     28                   Citrus Park        Cork  $206.99     40   \n",
      "29     29                       Darnell      Silver  $322.99     38   \n",
      "30     30                       Demaree       Brown  $339.99     50   \n",
      "31     31                          Jett       White  $262.99     45   \n",
      "32     32                        Milton     Caramel  $218.99     42   \n",
      "33     33                   South Teton   Dark Wood  $290.99     40   \n",
      "34     34                          Bess      Patina  $458.99     60   \n",
      "35     35                     Chaoyichi  Light Wood  $407.99     50   \n",
      "36     36                        Corvus         Tan  $313.99     48   \n",
      "37     37                       Encinas       Black  $384.99     52   \n",
      "38     38                         Gilby   Dark Wood  $395.99     57   \n",
      "39     39                       Jaohara      Patina  $139.99     55   \n",
      "40     40                        Mestas   Dark Wood  $180.99     53   \n",
      "41     41                     Monoceros       Brown  $548.99     55   \n",
      "42     42                 Netwon St Low       Brown  $198.99     56   \n",
      "43     43                        Orrell        Gray  $321.99     60   \n",
      "44     44                      Pinellas  Light Wood  $200.99     58   \n",
      "\n",
      "   Requires Assembly Country of Origin  Rating type  \n",
      "0                Yes            Greece    4.70   fs  \n",
      "1                Yes    United Kingdom    4.26   fs  \n",
      "2                Yes    United Kingdom    4.85   fs  \n",
      "3                 No    United Kingdom    3.51   fs  \n",
      "4                 No            France    4.14   fs  \n",
      "5                Yes           Denmark    3.19   fs  \n",
      "6                Yes     United States    3.06   fs  \n",
      "7                Yes     United States    4.11   fs  \n",
      "8                 No             China    4.49   fs  \n",
      "9                Yes            Russia    3.44   fs  \n",
      "10               Yes     United States    4.02   fs  \n",
      "11                No     United States    4.30   ls  \n",
      "12               Yes             China    4.88   ls  \n",
      "13               Yes             China    3.11   ls  \n",
      "14                No             Italy    4.79   ls  \n",
      "15               Yes     United States    4.21   ls  \n",
      "16               Yes             China    4.98  rec  \n",
      "17               Yes           Germany    3.76  rec  \n",
      "18               Yes             China    4.63  rec  \n",
      "19               Yes             China    4.63  rec  \n",
      "20                No            Norway    3.14  rec  \n",
      "21                No           Ireland    3.73  rec  \n",
      "22               Yes            Norway    4.62  rec  \n",
      "23               Yes           Germany    4.04  rec  \n",
      "24               Yes           Germany    4.84  rec  \n",
      "25               Yes     United States    4.59  rec  \n",
      "26               Yes     United States    4.79  rec  \n",
      "27               Yes         Indonesia    4.30  roc  \n",
      "28                No     United States    3.95  roc  \n",
      "29                No     United States    3.30  roc  \n",
      "30               Yes             China    4.14  roc  \n",
      "31                No       South Korea    3.59  roc  \n",
      "32                No    United Kingdom    4.06  roc  \n",
      "33                No     United States    4.56  roc  \n",
      "34               Yes     United States    3.56  tvs  \n",
      "35               Yes             China    4.70  tvs  \n",
      "36                No             Italy    3.54  tvs  \n",
      "37               Yes            Brazil    3.50  tvs  \n",
      "38               Yes    United Kingdom    3.07  tvs  \n",
      "39                No             China    4.02  tvs  \n",
      "40               Yes             China    3.85  tvs  \n",
      "41                No            Mexico    3.66  tvs  \n",
      "42                No    United Kingdom    3.95  tvs  \n",
      "43               Yes     United States    4.10  tvs  \n",
      "44               Yes     United States    4.42  tvs  \n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import requests\n",
    "url = 'https://raw.githubusercontent.com/Kinetic-Drive/HackGT8/main/data.csv'\n",
    "df = pd.read_csv(url)\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "826f4927",
   "metadata": {},
   "outputs": [],
   "source": [
    "inputs = df.drop(columns =['type', 'Index', 'Name'])\n",
    "target = df['Index']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "01182716",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "6e2ff605",
   "metadata": {},
   "outputs": [],
   "source": [
    "le_color = LabelEncoder()\n",
    "le_price = LabelEncoder()\n",
    "le_size = LabelEncoder()\n",
    "le_requires_assembly = LabelEncoder()\n",
    "le_country_of_origin = LabelEncoder()\n",
    "le_rating = LabelEncoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "6d7e78f2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Color</th>\n",
       "      <th>Price</th>\n",
       "      <th>Size</th>\n",
       "      <th>Requires Assembly</th>\n",
       "      <th>Country of Origin</th>\n",
       "      <th>Rating</th>\n",
       "      <th>color_n</th>\n",
       "      <th>price_n</th>\n",
       "      <th>size_n</th>\n",
       "      <th>ra_n</th>\n",
       "      <th>coo_n</th>\n",
       "      <th>rating_n</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Pink</td>\n",
       "      <td>$730.99</td>\n",
       "      <td>65</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Greece</td>\n",
       "      <td>4.70</td>\n",
       "      <td>13</td>\n",
       "      <td>38</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dark Grey</td>\n",
       "      <td>$716.99</td>\n",
       "      <td>70</td>\n",
       "      <td>Yes</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>4.26</td>\n",
       "      <td>5</td>\n",
       "      <td>35</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dark Grey</td>\n",
       "      <td>$370.99</td>\n",
       "      <td>67</td>\n",
       "      <td>Yes</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>4.85</td>\n",
       "      <td>5</td>\n",
       "      <td>15</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Yellow</td>\n",
       "      <td>$465.99</td>\n",
       "      <td>55</td>\n",
       "      <td>No</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>3.51</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>White</td>\n",
       "      <td>$720.99</td>\n",
       "      <td>55</td>\n",
       "      <td>No</td>\n",
       "      <td>France</td>\n",
       "      <td>4.14</td>\n",
       "      <td>17</td>\n",
       "      <td>36</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Color     Price  Size Requires Assembly Country of Origin  Rating  \\\n",
       "0       Pink  $730.99     65               Yes            Greece    4.70   \n",
       "1  Dark Grey  $716.99     70               Yes    United Kingdom    4.26   \n",
       "2  Dark Grey  $370.99     67               Yes    United Kingdom    4.85   \n",
       "3     Yellow  $465.99     55                No    United Kingdom    3.51   \n",
       "4      White  $720.99     55                No            France    4.14   \n",
       "\n",
       "   color_n  price_n  size_n  ra_n  coo_n  rating_n  \n",
       "0       13       38      15     1      5        32  \n",
       "1        5       35      19     1     13        24  \n",
       "2        5       15      17     1     13        35  \n",
       "3       19       25       9     0     13         8  \n",
       "4       17       36       9     0      3        22  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "inputs['color_n'] = le_color.fit_transform(inputs['Color'])\n",
    "inputs['price_n'] = le_price.fit_transform(inputs['Price'])\n",
    "inputs['size_n'] = le_size.fit_transform(inputs['Size'])\n",
    "inputs['ra_n'] = le_requires_assembly.fit_transform(inputs['Requires Assembly'])\n",
    "inputs['coo_n'] = le_country_of_origin.fit_transform(inputs['Country of Origin'])\n",
    "inputs['rating_n'] = le_rating.fit_transform(inputs['Rating'])\n",
    "inputs.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "e139df5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Size</th>\n",
       "      <th>color_n</th>\n",
       "      <th>price_n</th>\n",
       "      <th>size_n</th>\n",
       "      <th>ra_n</th>\n",
       "      <th>coo_n</th>\n",
       "      <th>rating_n</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>65</td>\n",
       "      <td>13</td>\n",
       "      <td>38</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>70</td>\n",
       "      <td>5</td>\n",
       "      <td>35</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>67</td>\n",
       "      <td>5</td>\n",
       "      <td>15</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>55</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>55</td>\n",
       "      <td>17</td>\n",
       "      <td>36</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>75</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>66</td>\n",
       "      <td>10</td>\n",
       "      <td>40</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>70</td>\n",
       "      <td>17</td>\n",
       "      <td>41</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>68</td>\n",
       "      <td>1</td>\n",
       "      <td>33</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>57</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>60</td>\n",
       "      <td>8</td>\n",
       "      <td>34</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>60</td>\n",
       "      <td>4</td>\n",
       "      <td>37</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>64</td>\n",
       "      <td>18</td>\n",
       "      <td>39</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>70</td>\n",
       "      <td>0</td>\n",
       "      <td>42</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>65</td>\n",
       "      <td>14</td>\n",
       "      <td>23</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>45</td>\n",
       "      <td>6</td>\n",
       "      <td>26</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>55</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>55</td>\n",
       "      <td>9</td>\n",
       "      <td>14</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>45</td>\n",
       "      <td>15</td>\n",
       "      <td>32</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>65</td>\n",
       "      <td>17</td>\n",
       "      <td>32</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>55</td>\n",
       "      <td>17</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>65</td>\n",
       "      <td>15</td>\n",
       "      <td>29</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>57</td>\n",
       "      <td>17</td>\n",
       "      <td>19</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>47</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>50</td>\n",
       "      <td>9</td>\n",
       "      <td>27</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>50</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>40</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>38</td>\n",
       "      <td>15</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>50</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>45</td>\n",
       "      <td>17</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>42</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>40</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>60</td>\n",
       "      <td>11</td>\n",
       "      <td>24</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>50</td>\n",
       "      <td>9</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>48</td>\n",
       "      <td>16</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>57</td>\n",
       "      <td>6</td>\n",
       "      <td>18</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>55</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>53</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>55</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>56</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>60</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>58</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Size  color_n  price_n  size_n  ra_n  coo_n  rating_n\n",
       "0     65       13       38      15     1      5        32\n",
       "1     70        5       35      19     1     13        24\n",
       "2     67        5       15      17     1     13        35\n",
       "3     55       19       25       9     0     13         8\n",
       "4     55       17       36       9     0      3        22\n",
       "5     75        0       28      20     1      2         4\n",
       "6     66       10       40      16     1     14         0\n",
       "7     70       17       41      19     1     14        21\n",
       "8     68        1       33      18     0      1        27\n",
       "9     57       14       16      11     1     11         6\n",
       "10    60        8       34      13     1     14        17\n",
       "11    60        1       22      13     0     14        25\n",
       "12    60        4       37      13     1      1        36\n",
       "13    64       18       39      14     1      1         2\n",
       "14    70        0       42      19     0      8        33\n",
       "15    65       14       23      15     1     14        23\n",
       "16    45        6       26       3     1      1        37\n",
       "17    55       12        1       9     1      4        14\n",
       "18    55        9       14       9     1      1        31\n",
       "19    40        0       31       1     1      1        31\n",
       "20    45       15       32       3     0     10         3\n",
       "21    65       17       32      15     0      7        13\n",
       "22    55       17        8       9     1     10        30\n",
       "23    65       15       29      15     1      4        18\n",
       "24    57       17       19      11     1      4        34\n",
       "25    47       17        1       4     1     14        29\n",
       "26    50        9       27       6     1     14        33\n",
       "27    50       17       21       6     1      6        25\n",
       "28    40        3        5       1     0     14        16\n",
       "29    38       15       12       0     0     14         5\n",
       "30    50        1       13       6     1      1        22\n",
       "31    45       17        7       3     0     12        11\n",
       "32    42        2        6       2     0     13        19\n",
       "33    40        6        9       1     0     14        28\n",
       "34    60       11       24      13     1     14        10\n",
       "35    50        9       20       6     1      1        32\n",
       "36    48       16       10       5     0      8         9\n",
       "37    52        0       17       7     1      0         7\n",
       "38    57        6       18      11     1     13         1\n",
       "39    55       11        0       9     0      1        17\n",
       "40    53        6        2       8     1      1        15\n",
       "41    55        1       30       9     0      9        12\n",
       "42    56        1        3      10     0     13        16\n",
       "43    60        7       11      13     1     14        20\n",
       "44    58        9        4      12     1     14        26"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "inputs_n = inputs.drop(['Color', 'Price', 'Size', 'Requires Assembly', 'Country of Origin', 'Rating'], axis = 'columns')\n",
    "inputs_n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "0ef6f6a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      0\n",
       "1      1\n",
       "2      2\n",
       "3      3\n",
       "4      4\n",
       "5      5\n",
       "6      6\n",
       "7      7\n",
       "8      8\n",
       "9      9\n",
       "10    10\n",
       "11    11\n",
       "12    12\n",
       "13    13\n",
       "14    14\n",
       "15    15\n",
       "16    16\n",
       "17    17\n",
       "18    18\n",
       "19    19\n",
       "20    20\n",
       "21    21\n",
       "22    22\n",
       "23    23\n",
       "24    24\n",
       "25    25\n",
       "26    26\n",
       "27    27\n",
       "28    28\n",
       "29    29\n",
       "30    30\n",
       "31    31\n",
       "32    32\n",
       "33    33\n",
       "34    34\n",
       "35    35\n",
       "36    36\n",
       "37    37\n",
       "38    38\n",
       "39    39\n",
       "40    40\n",
       "41    41\n",
       "42    42\n",
       "43    43\n",
       "44    44\n",
       "Name: Index, dtype: int64"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "target"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "e723c72c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import tree\n",
    "model = tree.DecisionTreeClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6afab7e2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "425a793c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier()"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(inputs_n, target)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "eae2a098",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.score(inputs_n, target)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e3286b6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
